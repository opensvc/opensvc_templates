worker_processes  10;
worker_rlimit_nofile 1024;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # set to the maximum safe upload size or
    # the the maximum "nodemgr push<inventory>" dataset size
    # you want to support
    client_max_body_size 100m;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    server {
        listen       *:80;
        server_name  _;
        return 301 https://$host$request_uri;
    }

    server {
        listen       *:443 ssl;
        #listen       *:8000;
        server_name  _;

        ssl_certificate      /etc/nginx/ssl/certificate_chain;
        ssl_certificate_key  /etc/nginx/ssl/private_key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-DSS-AES256-SHA:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA;
        #ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;
        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;

        location ~* /(\w+)/static/ {
            root /opt/web2py/applications/;
            expires max;
        }

        location /realtime/ {
            proxy_pass http://localhost:8889;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        location / {
            uwsgi_pass      127.0.0.1:8001;
            include         uwsgi_params;
            uwsgi_param     UWSGI_SCHEME $scheme;
            uwsgi_param     SERVER_SOFTWARE    nginx/$nginx_version;
        }

        location /nginx_status {
            stub_status;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

    }

}
