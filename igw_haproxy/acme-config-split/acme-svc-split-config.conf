[DEFAULT]
nodes = *
orchestrate = ha

[volume#1]
type = shm
directories = /stats
configs = {name}/haproxy.cfg:/haproxy/haproxy.cfg {name}/acme-http01-webroot.lua:/haproxy/acme-http01-webroot.lua
name = {name}-cfg
perm = 640
dirperm = 750
user = 99
signal = hup:container#1
size = 1m

[volume#data]
type = drbd
size = 512m
name = {name}-data
perm = 640
dirperm = 750
user = 99
shared = true
directories = /certs /acme-challenges /acme-config
secrets = {name}/fullpem:/certs/bootstrap.pem

[volume#2]
type = shm
configs = {name}/*.sh:/scripts/ {name}/haproxy.cfg.temp:/haproxy/haproxy.cfg.temp
name = {name}-scripts
perm = 750
dirperm = 750
user = 99
size = 1m

[ip#0]
type = cni
netns = container#0
network = {env.backendnet}
shared = true

[container#0]
type = oci
image = ghcr.io/opensvc/pause
rm = true
shared = true

[container#1]
type = oci
image = {env.haproxyimg}
rm = true
volume_mounts = {name}-cfg/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg {name}-cfg/haproxy/acme-http01-webroot.lua:/usr/local/etc/haproxy/acme-http01-webroot.lua {name}-data/acme-challenges:/acme-challenges {name}-data/certs:/certs {name}-cfg/stats:/stats
netns = container#0
restart = 3
shared = true
environment = CLUSTERNAME={clustername}
user = root

[task#issuecert]
type = docker
image = neilpang/acme.sh
volume_mounts = {name}-data/certs:/certs {name}-data/acme-challenges:/acme-challenges {name}-data/acme-config:/acme.sh {name}-cfg/stats:/stats
environment = DEPLOY_HAPROXY_PEM_PATH=/certs DEPLOY_HAPROXY_STATS_SOCKET=/stats/haproxy.sock DEPLOY_HAPROXY_HOT_UPDATE=yes CERT_HOME=/certs
netns = container#0
pidns = container#1
command = sh -c "acme.sh --issue --domain {env.domain} --server {env.caserver} --webroot /acme-challenges && acme.sh --deploy --domain {env.domain} --deploy-hook haproxy"

[task#validatecfg]
type = docker
image = {env.haproxyimg}
rm = true
volume_mounts = {name}-scripts/haproxy/haproxy.cfg.temp:/usr/local/etc/haproxy/haproxy.cfg {name}-cfg/haproxy/acme-http01-webroot.lua:/usr/local/etc/haproxy/acme-http01-webroot.lua {name}-data/acme-challenges:/acme-challenges {name}-data/certs:/certs {name}-cfg/stats:/stats
command = haproxy -f /usr/local/etc/haproxy/haproxy.cfg -c
optional = false
netns = container#0

[task#mergecfg]
type = host
command = sh -c "{volume#2.mnt}/scripts/gencfg.sh {volume#data.mnt}/certs"
optional = false
run_requires = container#1(up)

[sync#i0]
disable = true

[env]
caserver = letsencrypt
domain = 
haproxyimg = docker.io/haproxy:3.0.6-alpine
backendnet = backend
